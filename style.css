/* ==========================================================================
   1. GLOBAL VARIABLES
   ========================================================================= */
:root {
    /* Main colors */
    --naranja-principal: #FF7200;
    --naranja-secundario: #FF9340;
    --naranja-claro: #FFF1E6;
    --naranja-oscuro: #E56700;
    
    /* Neutral colors */
    --blanco: #FFFFFF;
    --negro: #1A1A1A;
    --gris-oscuro: #2D2D2D;
    --gris-medio: #666666;
    --gris-claro: #F7F7F7;
    --gris-borde: #E5E5E5;
    
    /* Text colors */
    --fondo-claro: #FAFAFA;
    --texto-oscuro: #2D2D2D;
    --texto-claro: #555555;
    --texto-ligero: #888888;
    
    /* Service colors */
    --auditoria-verde: #2F855A; 
    --auditoria-verde-hover: #276749;
    --auditoria-verde-claro: #F0FFF4;
    
    --color-ads: #4267B2;
    --color-google: #4285F4;
    --color-email: #0E76A8;
    --color-chatbot: #6B46C1;
    
    /* Backgrounds with opacity */
    --bg-ads: rgba(66, 103, 178, 0.08);
    --bg-google: rgba(66, 133, 244, 0.08);
    --bg-email: rgba(14, 118, 168, 0.08);
    --bg-chatbot: rgba(107, 70, 193, 0.08);
    
    /* Shadows */
    --sombra-suave: 0 2px 5px rgba(0, 0, 0, 0.05);
    --sombra-media: 0 5px 15px rgba(0, 0, 0, 0.05);
    --sombra-fuerte: 0 8px 20px rgba(0, 0, 0, 0.08);
    --sombra-focus: 0 0 0 3px rgba(255, 114, 0, 0.3);
    
    /* Borders */
    --borde-fino: 1px;
    --borde-medio: 2px;
    --borde-redondo-xs: 3px;
    --borde-redondo-sm: 5px;
    --borde-redondo-md: 8px;
    --borde-redondo-lg: 12px;
    --borde-redondo-xl: 16px;
    --borde-redondo-full: 9999px;
    
    /* Spacing */
    --espaciado-xs: 0.5rem;
    --espaciado-sm: 1rem;
    --espaciado-md: 1.5rem;
    --espaciado-lg: 3rem;
    --espaciado-xl: 5rem;
    
    /* Typography */
    --fuente-principal: 'Montserrat', sans-serif;
    --fuente-secundaria: 'Open Sans', sans-serif;
    
    /* Font sizes */
    --texto-xs: 0.75rem;
    --texto-sm: 0.875rem;
    --texto-base: 1rem;
    --texto-md: 1.125rem;
    --texto-lg: 1.25rem;
    --texto-xl: 1.5rem;
    --texto-2xl: 2rem;
    --texto-3xl: 2.5rem;
    --texto-4xl: 3rem;
    
    /* Transitions */
    --transicion-rapida: 0.2s ease;
    --transicion-media: 0.3s ease;
    
    /* Breakpoints */
    --bp-mobile: 480px;
    --bp-tablet: 768px;
    --bp-desktop: 1024px;
    --bp-desktop-wide: 1280px;
    
    /* Container */
    --ancho-maximo: 1200px;
    
    /* Header heights */
    --header-height: 80px;
    --header-height-mobile: 70px;
    --header-height-sticky: 70px;
}

/* ==========================================================================
   2. RESET AND BASE STYLES
   ========================================================================= */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html, body {
    font-size: 16px;
    scroll-behavior: smooth;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden;
    width: 100%;
}

body {
    font-family: var(--fuente-secundaria);
    color: var(--texto-oscuro);
    line-height: 1.6;
    background-color: var(--blanco);
    min-height: 100vh;
}

.preload * {
    transition: none !important;
}

img {
    max-width: 100%;
    height: auto;
    display: block;
}

a {
    color: inherit;
    text-decoration: none;
    transition: color var(--transicion-rapida);
}

button, input, select, textarea {
    font: inherit;
    color: inherit;
}

button {
    background: none;
    border: none;
    cursor: pointer;
    transition: all var(--transicion-rapida);
}

button:focus, a:focus {
    outline: none;
}

ul, ol {
    list-style: none;
}

/* ==========================================================================
   3. LAYOUT AND CONTAINERS
   ========================================================================= */
.container {
    width: 100%;
    max-width: var(--ancho-maximo);
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--espaciado-md);
    padding-right: var(--espaciado-md);
    position: relative;
}

section {
    padding: var(--espaciado-lg) 0;
    position: relative;
    overflow: hidden;
}

section:first-of-type {
    padding-top: 0;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -1rem;
}

/* ==========================================================================
   4. TYPOGRAPHY
   ========================================================================= */
h1, h2, h3, h4, h5, h6 {
    font-family: var(--fuente-principal);
    line-height: 1.2;
    margin-bottom: var(--espaciado-sm);
    font-weight: 700;
    color: var(--negro);
}

h1 {
    font-size: var(--texto-4xl);
    margin-bottom: var(--espaciado-md);
    font-weight: 800;
    line-height: 1.15;
}

h2 {
    font-size: var(--texto-3xl);
    margin-bottom: var(--espaciado-md);
    font-weight: 700;
}

h3 {
    font-size: var(--texto-xl);
    font-weight: 600;
}

h4 {
    font-size: var(--texto-lg);
    font-weight: 600;
}

p {
    margin-bottom: var(--espaciado-sm);
    color: var(--texto-claro);
    line-height: 1.7;
}

.text-center { text-align: center; }
.text-left { text-align: left; }
.text-right { text-align: right; }

.seccion-titulo {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin-bottom: var(--espaciado-lg);
}

.seccion-titulo span.subtitulo {
    display: block;
    padding: 6px 16px;
    background-color: var(--naranja-claro);
    color: var(--naranja-principal);
    border-radius: var(--borde-redondo-full);
    font-size: var(--texto-sm);
    font-weight: 700;
    margin-bottom: var(--espaciado-xs);
    text-transform: uppercase;
    letter-spacing: 1px;
}

.seccion-titulo h2 {
    color: var(--texto-oscuro);
    font-size: calc(var(--texto-3xl) * 1.1);
    font-weight: 800;
    margin-bottom: var(--espaciado-sm);
    position: relative;
    display: inline-block;
}

.seccion-titulo h2::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background-color: var(--naranja-principal);
    border-radius: var(--borde-redondo-full);
}

.seccion-titulo p {
    color: var(--texto-claro);
    max-width: 700px;
    margin: var(--espaciado-md) auto 0;
    font-size: var(--texto-md);
    line-height: 1.7;
}

.seccion-titulo.text-left {
    align-items: flex-start;
    text-align: left;
}

.seccion-titulo.text-left h2::after {
    left: 0;
    transform: none;
}

.subtitulo {
    display: block;
    font-family: var(--fuente-principal);
    font-size: var(--texto-sm);
    font-weight: 700;
    color: var(--naranja-principal);
    text-transform: uppercase;
    letter-spacing: 1.5px;
    margin-bottom: var(--espaciado-xs);
}

/* ==========================================================================
   5. NAVBAR
   ========================================================================= */
.navbar {
    background-color: transparent;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    transition: all var(--transicion-media);
}

.navbar-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: var(--header-height);
}

.logo-container {
    display: flex;
    align-items: center;
}

.logo {
    font-family: var(--fuente-principal);
    font-weight: 800;
    font-size: 1.8rem;
    color: var(--blanco);
    text-decoration: none;
    display: flex;
    align-items: center;
}

.logo span {
    color: var(--naranja-principal);
}

.nav-menu {
    display: flex;
    align-items: center;
}

.nav-menu ul {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
}

.nav-menu li {
    position: relative;
    margin: 0 0.8rem;
}

.nav-link {
    color: var(--blanco);
    font-weight: 600;
    padding: 0.5rem 0.8rem;
    text-decoration: none;
    font-size: var(--texto-sm);
    transition: color var(--transicion-rapida);
}

.nav-link:hover {
    color: var(--naranja-principal);
}

.dropdown-toggle {
    display: flex;
    align-items: center;
    gap: 0.3rem;
}

.dropdown-toggle::after {
    content: "\f107";
    font-family: "Font Awesome 6 Free";
    font-weight: 900;
    transition: transform var(--transicion-rapida);
}

.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    background-color: var(--blanco);
    min-width: 220px;
    padding: 1rem 0;
    border-radius: var(--borde-redondo-md);
    box-shadow: var(--sombra-media);
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: opacity var(--transicion-media), transform var(--transicion-media), visibility var(--transicion-media);
    z-index: 1000;
}

.dropdown-menu.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

.dropdown-item {
    display: block;
    padding: 0.6rem 1.5rem;
    color: var(--texto-oscuro);
    font-size: var(--texto-sm);
    transition: background-color var(--transicion-rapida), color var(--transicion-rapida);
}

.dropdown-item:hover {
    background-color: var(--fondo-claro);
    color: var(--naranja-principal);
}

.mobile-toggle {
    display: none;
    background: none;
    border: none;
    font-size: 1.5rem;
    color: var(--blanco);
    cursor: pointer;
}

/* Sticky navbar */
.navbar.sticky {
    position: fixed;
    background-color: var(--blanco);
    box-shadow: var(--sombra-suave);
    height: var(--header-height-sticky);
}

.navbar.sticky .nav-link {
    color: var(--texto-oscuro);
}

.navbar.sticky .logo {
    color: var(--texto-oscuro);
}

.navbar.sticky .mobile-toggle {
    color: var(--texto-oscuro);
}

/* Responsive Navbar */
@media (max-width: 991px) {
    .navbar-container {
        height: var(--header-height-mobile);
    }
    
    .mobile-toggle {
        display: block;
    }
    
    .nav-menu {
        position: fixed;
        top: var(--header-height-mobile);
        left: 0;
        width: 100%;
        height: calc(100vh - var(--header-height-mobile));
        background-color: var(--negro);
        flex-direction: column;
        align-items: flex-start;
        padding: 2rem 1rem;
        opacity: 0;
        visibility: hidden;
        transform: translateX(100%);
        transition: transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease;
        overflow-y: auto;
    }
    
    .nav-menu.active {
        opacity: 1;
        visibility: visible;
        transform: translateX(0);
    }
    
    .nav-menu ul {
        flex-direction: column;
        width: 100%;
    }
    
    .nav-menu li {
        margin: 0;
        width: 100%;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .nav-link {
        display: block;
        padding: 1rem;
        width: 100%;
    }
    
    .dropdown-toggle {
        justify-content: space-between;
        width: 100%;
    }
    
    .dropdown-menu {
        position: static;
        background-color: transparent;
        box-shadow: none;
        min-width: 100%;
        padding: 0.5rem 0;
        border-radius: 0;
        display: none;
    }
    
    .dropdown-menu.active {
        display: block;
    }
    
    .dropdown-item {
        color: var(--blanco);
        padding: 0.8rem 2rem;
    }
    
    .dropdown-item:hover {
        background-color: rgba(255, 255, 255, 0.05);
    }
}

/* ==========================================================================
   6. BUTTONS AND LINKS
   ========================================================================= */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    padding: 12px 28px;
    color: var(--blanco);
    font-family: var(--fuente-principal);
    font-weight: 600;
    border-radius: var(--borde-redondo-md);
    transition: all var(--transicion-media);
    text-align: center;
    z-index: 1;
    border: none;
    cursor: pointer;
    box-shadow: var(--sombra-suave);
    background-color: var(--naranja-principal);
    letter-spacing: 0.3px;
}

.btn-primary {
    background-color: var(--auditoria-verde);
    border: 2px solid var(--auditoria-verde-hover);
    box-shadow: 0 4px 12px rgba(47, 133, 90, 0.2);
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: var(--sombra-media);
    opacity: 0.95;
}

.btn:active {
    transform: translateY(-1px);
}

.btn-outline {
    background-color: transparent;
    border: var(--borde-medio) solid var(--naranja-principal);
    color: var(--naranja-principal);
    box-shadow: none;
}

.btn-outline:hover {
    background-color: var(--naranja-principal);
    color: var(--blanco);
}

.btn-lg {
    padding: 16px 32px;
    font-size: var(--texto-md);
    font-weight: 700;
    border-radius: var(--borde-redondo-md);
}

.btn-sm {
    padding: 8px 16px;
    font-size: var(--texto-sm);
    border-radius: var(--borde-redondo-sm);
}

.btn-auditoria {
    background-color: var(--auditoria-verde);
    color: var(--blanco);
    font-weight: 700;
    padding: 14px 28px;
    margin-top: var(--espaciado-sm);
    width: 100%;
    box-shadow: 0 4px 10px rgba(47, 133, 90, 0.15);
    border-radius: var(--borde-redondo-md);
    letter-spacing: 0.5px;
}

.btn-auditoria:hover {
    background-color: var(--auditoria-verde-hover);
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(47, 133, 90, 0.25);
}

/* Service specific buttons */
.btn-plan {
    width: 100%;
    padding: 14px 20px;
    border-radius: var(--borde-redondo-md);
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    color: var(--blanco);
    font-weight: 700;
    text-align: center;
    letter-spacing: 0.5px;
    display: inline-block;
    margin-top: 20px;
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
    background-color: var(--naranja-principal);
}

.btn-plan:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
    opacity: 0.95;
}

.btn-pro {
    background-color: var(--color-ads);
}

.btn-bundle {
    background-color: var(--auditoria-verde);
    color: var(--blanco);
    font-weight: 700;
    padding: 15px 30px;
    border-radius: var(--borde-redondo-md);
    display: inline-block;
}

.btn-bundle:hover {
    background-color: var(--auditoria-verde-hover);
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(47, 133, 90, 0.25);
}

/* Floating CTA button */
.cta-flotante {
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 99;
}

.btn-flotante {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 12px 24px;
    background-color: var(--auditoria-verde);
    color: var(--blanco);
    border-radius: var(--borde-redondo-full);
    font-weight: 700;
    box-shadow: var(--sombra-media);
    transition: all var(--transicion-media);
}

.btn-flotante:hover {
    transform: translateY(-3px);
    background-color: var(--auditoria-verde-hover);
    box-shadow: var(--sombra-fuerte);
}

.btn-flotante i {
    font-size: var(--texto-base);
}

/* ==========================================================================
   7. ANIMATIONS - SIMPLIFIED
   ========================================================================= */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes bounce {
    0%, 100% {
        transform: translateY(0) translateX(-50%);
    }
    50% {
        transform: translateY(-10px) translateX(-50%);
    }
}

.fade-in {
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.fade-in.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Ensure visibility */
.servicios .fade-in,
.servicios .seccion-titulo,
#header {
    opacity: 1 !important;
    transform: translateY(0) !important;
    animation: none !important;
    visibility: visible !important;
}

.metric-after {
    opacity: 0;
    transition: opacity 0.5s ease;
}

.metric-after.animated {
    opacity: 1;
}

/* Optimization for reduced motion */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* ==========================================================================
   8. HERO SECTION
   ========================================================================= */
.hero {
    padding-top: 110px;
    padding-bottom: 110px;
    position: relative;
    overflow: visible;
    min-height: 80vh;
    display: flex;
    align-items: center;
    background: var(--naranja-principal);
    margin-top: var(--header-height);
}

.hero-shape {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.12;
    z-index: 2;
}

.hero-container.container {
    position: relative;
    z-index: 3;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 60px;
    max-width: var(--ancho-maximo);
    width: 100%;
    padding: 0 60px;
}

/* Hero Content */
.hero-content-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    width: 50%;
    text-align: left;
}

.hero-content {
    color: var(--blanco);
    position: relative;
    z-index: 2;
    text-align: left;
    padding: 20px 0;
}

.hero-title {
    color: var(--blanco);
    margin-bottom: 28px;
    font-size: 3rem;
    font-weight: 800;
    line-height: 1.15;
    text-align: left;
    margin-left: 0;
    margin-right: 0;
    max-width: 800px;
}

.hero-subtitle {
    font-size: 1.25rem;
    margin-bottom: 36px;
    line-height: 1.6;
    background-color: rgba(0, 0, 0, 0.15);
    padding: 16px 24px;
    border-radius: 12px;
    color: white;
    font-weight: 500;
    max-width: 700px;
    margin-left: 0;
    margin-right: 0;
}

/* Hero Services */
.hero-services {
    display: flex;
    flex-wrap: wrap;
    gap: 14px;
    margin-bottom: 36px;
    justify-content: flex-start;
}

.service-pill {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 12px 20px;
    border-radius: 100px;
    background-color: rgba(255, 255, 255, 0.15);
    transition: all 0.3s ease;
    cursor: pointer;
    /**
 * Orange Vapor - JavaScript para Home
 * Script para funcionalidades específicas de la página principal
 * Versión: 1.0.0
 */

document.addEventListener('DOMContentLoaded', function() {
    'use strict';

    // =========================================================================
    // UTILIDADES Y FUNCIONES AUXILIARES
    // =========================================================================
    
    /**
     * Selecciona elementos del DOM y ejecuta una función para cada uno
     * @param {string} selector - Selector CSS
     * @param {Function} fn - Función a ejecutar para cada elemento
     * @param {HTMLElement} [parent=document] - Elemento padre donde buscar
     */
    const forEachElement = (selector, fn, parent = document) => {
        const elements = parent.querySelectorAll(selector);
        if (elements.length > 0) {
            elements.forEach(fn);
            return true;
        }
        return false;
    };
    
    // =========================================================================
    // ASEGURAR VISIBILIDAD DE ELEMENTOS CRÍTICOS
    // =========================================================================
    
    /**
     * Asegura que los elementos críticos estén visibles de inmediato
     */
    function asegurarVisibilidadCritica() {
        const elementosCriticos = [
            '#servicios .seccion-titulo',
            '#servicios .servicios-tabs-container',
            '#servicios .servicios-content-container',
            '#servicios .oferta-especial',
            '#servicios .servicios-garantia',
            '#servicios .soluciones-card',
            '#servicios .fade-in',
            '#home .fade-in',
            '#optimizacion-express .fade-in',
            '.servicios-tabla-modern .fade-in',
            '.hero-content',
            '.hero-image',
            '.auditoria-card-redesign' // Añadida la nueva clase rediseñada
        ];
        
        elementosCriticos.forEach(selector => {
            forEachElement(selector, elemento => {
                // Añadir clase visible y forzar estilos
                elemento.classList.add('visible');
                elemento.style.opacity = '1';
                elemento.style.transform = 'translateY(0)';
                elemento.style.visibility = 'visible';
            });
        });
        
        console.log('Elementos críticos asegurados como visibles');
    }
    
    // Llamar inmediatamente para asegurar visibilidad
    asegurarVisibilidadCritica();
    
    // Respaldo adicional con setTimeout
    setTimeout(asegurarVisibilidadCritica, 500);
    setTimeout(() => {
        forEachElement('.fade-in', elemento => {
            elemento.classList.add('visible');
        });
        console.log('Todos los elementos fade-in asegurados como visibles');
    }, 2000);
    
    // =========================================================================
    // MICROINTERACCIONES Y ANIMACIONES
    // =========================================================================
    
    function initScrollAnimations() {
        // Microinteracciones optimizadas para el rendimiento
        const fadeElements = document.querySelectorAll('.fade-in:not(.visible)');
        
        const observerOptions = {
            root: null,
            rootMargin: '0px',
            threshold: 0.1
        };
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                    if (entry.target.classList.contains('fade-left')) {
                        entry.target.classList.add('animate-fade-left');
                    } else if (entry.target.classList.contains('fade-right')) {
                        entry.target.classList.add('animate-fade-right');
                    } else if (entry.target.classList.contains('fade-up')) {
                        entry.target.classList.add('animate-fade-up');
                    } else {
                        entry.target.classList.add('animate-fade-in');
                    }
                    observer.unobserve(entry.target);
                }
            });
        }, observerOptions);
        
        fadeElements.forEach(element => {
            observer.observe(element);
        });

        // Añadir delay personalizado a elementos en secuencia
        document.querySelectorAll('.features-sequence > *').forEach((item, index) => {
            item.style.transitionDelay = `${index * 0.1}s`;
        });
    }
    
    // =========================================================================
    // TABS DE SERVICIOS Y TIERS
    // =========================================================================
    
    /**
     * Inicializa las pestañas de servicios
     */
    function initServiceTabs() {
        // Seleccionar todas las pestañas de servicios
        const servicioTabs = document.querySelectorAll('.servicio-tab');
        if (!servicioTabs.length) return;
        
        servicioTabs.forEach(tab => {
            tab.addEventListener('click', function() {
                // Obtener el servicio seleccionado
                const servicio = this.getAttribute('data-servicio');
                
                // Remover clase 'active' de todas las pestañas
                servicioTabs.forEach(t => t.classList.remove('active'));
                
                // Añadir clase 'active' a la pestaña seleccionada
                this.classList.add('active');
                
                // Actualizar contenido visible
                forEachElement('.servicio-content-wrapper', content => {
                    content.classList.remove('active');
                });
                
                const targetContent = document.querySelector(`.servicio-content-wrapper[data-servicio="${servicio}"]`);
                if (targetContent) {
                    targetContent.classList.add('active');
                }
            });
        });
        
        // Inicializar mostrando el primer servicio
        const firstTab = document.querySelector('.servicio-tab[data-servicio="meta"]');
        if (firstTab) {
            firstTab.classList.add('active');
            const firstContent = document.querySelector('.servicio-content-wrapper[data-servicio="meta"]');
            if (firstContent) {
                firstContent.classList.add('active');
            }
        }
    }
    
    /**
     * Inicializa las pestañas de tiers (planes)
     */
    function initTierTabs() {
        const tierTabs = document.querySelectorAll('.tier-tab');
        if (!tierTabs.length) return;
        
        tierTabs.forEach(tab => {
            tab.addEventListener('click', function() {
                // Obtener el tier seleccionado
                const tier = this.getAttribute('data-tier');
                
                // Remover clase 'active' de todas las pestañas
                tierTabs.forEach(t => t.classList.remove('active'));
                
                // Añadir clase 'active' a la pestaña seleccionada
                this.classList.add('active');
                
                // Actualizar descripciones
                forEachElement('.tier-info', info => {
                    info.classList.remove('active');
                });
                const tierInfo = document.querySelector(`.tier-info.${tier}`);
                if (tierInfo) tierInfo.classList.add('active');
                
                // Actualizar precios
                forEachElement('.precio-compacto', price => {
                    price.classList.remove('active');
                });
                forEachElement(`.precio-compacto.tier-price.${tier}`, price => {
                    price.classList.add('active');
                });
                
                // Actualizar detalles (versiones de tabla normal y compacta)
                updateTierDetails(tier);
                
                // Reiniciar la vista de servicios al primer servicio
                resetServiceView();
            });
        });
        
        // Inicializar con el tier Starter
        const starterTab = document.querySelector('.tier-tab[data-tier="starter"]');
        if (starterTab) {
            starterTab.classList.add('active');
            const starterInfo = document.querySelector('.tier-info.starter');
            if (starterInfo) starterInfo.classList.add('active');
            updateTierDetails('starter');
        }
    }
    
    /**
     * Actualiza los detalles de tier en todas las tablas
     * @param {string} tier - Nombre del tier (starter, pro, elite)
     */
    function updateTierDetails(tier) {
        // Para cada tabla de servicios (normal y compacta)
        forEachElement('.servicios-tabla, .servicios-tabla-compacta, .servicios-tabla-modern', tabla => {
            // Ocultar todos los detalles primero
            forEachElement('.tier-detalle, .tier-detalle-compacto', detalle => {
                detalle.style.display = 'none';
                detalle.classList.remove('active');
            }, tabla);
            
            // Mostrar solo los detalles del tier seleccionado
            forEachElement(`.tier-detalle.${tier}, .tier-detalle-compacto.${tier}`, detalle => {
                detalle.style.display = 'flex';
                detalle.classList.add('active');
                
                // Añadir animación
                detalle.style.animation = 'none';
                setTimeout(() => {
                    detalle.style.animation = 'fadeIn 0.3s ease-in-out forwards';
                }, 10);
            }, tabla);
        });
    }
    
    /**
     * Reinicia la vista de servicios al primer servicio
     */
    function resetServiceView() {
        forEachElement('.servicio-tab', tab => {
            tab.classList.remove('active');
        });
        const firstTab = document.querySelector('.servicio-tab[data-servicio="meta"]');
        if (firstTab) firstTab.classList.add('active');
        
        forEachElement('.servicio-content-wrapper', content => {
            content.classList.remove('active');
        });
        const firstContent = document.querySelector('.servicio-content-wrapper[data-servicio="meta"]');
        if (firstContent) firstContent.classList.add('active');
    }
    
    /**
     * Inicializa el selector de tiers mini en la sección proceso
     */
    function initTierSelectorMini() {
        const tierOptionsMini = document.querySelectorAll('.tier-option');
        if (!tierOptionsMini.length) return;
        
        tierOptionsMini.forEach(option => {
            option.addEventListener('click', function() {
                // Actualizar estado visual de opciones
                tierOptionsMini.forEach(o => o.classList.remove('active'));
                this.classList.add('active');
                
                // Obtener tier seleccionado
                const tier = this.getAttribute('data-tier');
                
                // Actualizar precios mini
                forEachElement('.tier-mini', price => {
                    price.classList.remove('active');
                });
                
                const activeTierMini = document.querySelector(`.tier-mini.${tier}`);
                if (activeTierMini) activeTierMini.classList.add('active');
            });
        });
        
        // Inicializar con el primer tier activo
        if (tierOptionsMini[0]) tierOptionsMini[0].classList.add('active');
        const firstTierType = tierOptionsMini[0]?.getAttribute('data-tier');
        if (firstTierType) {
            const firstTierMini = document.querySelector(`.tier-mini.${firstTierType}`);
            if (firstTierMini) firstTierMini.classList.add('active');
        }
    }
    
    // =========================================================================
    // TOOLTIPS
    // =========================================================================
    
    /**
     * Inicializa el comportamiento de los tooltips
     */
    function initTooltips() {
        const tooltipTriggers = document.querySelectorAll('.tooltip-trigger');
        if (!tooltipTriggers.length) return;
        
        tooltipTriggers.forEach(trigger => {
            const tooltip = trigger.querySelector('.tooltip');
            if (!tooltip) return;
            
            // Mostrar tooltip al entrar
            trigger.addEventListener('mouseenter', () => {
                tooltip.classList.add('visible');
            });
            
            // Ocultar tooltip al salir
            trigger.addEventListener('mouseleave', () => {
                tooltip.classList.remove('visible');
            });
            
            // Para dispositivos táctiles
            trigger.addEventListener('touchstart', (e) => {
                e.preventDefault();
                tooltip.classList.toggle('visible');
            }, { passive: false });
        });
    }
    
    // =========================================================================
    // MÉTRICAS Y ANIMACIONES VISUALES - ELIMINADAS REFERENCIAS A SECCIONES QUITADAS
    // =========================================================================
    
    /**
     * Inicializa las animaciones de métricas
     */
    function initMetricAnimations() {
        // Hacer visibles las métricas inmediatamente
        forEachElement('.metric-after', metric => {
            metric.classList.add('animated');
            metric.style.opacity = '1';
            
            // Obtener y mostrar el valor final
            const targetValue = metric.getAttribute('data-value');
            if (targetValue) {
                metric.textContent = targetValue;
            }
        });
    }
    
    // =========================================================================
    // FUNCIONES ADICIONALES
    // =========================================================================
    
    /**
     * Actualiza el precio de la oferta especial
     */
    function updateSpecialOffer() {
        // Calcular precio regular y ahorro
        const regularPrice = 299 * 4; // $1,196
        const discountedPrice = 1000; // Precio con descuento
        const savings = regularPrice - discountedPrice;
        
        // Actualizar texto de oferta especial
        const ofertaEspecial = document.querySelector('.oferta-especial h3');
        if (ofertaEspecial) {
            ofertaEspecial.innerHTML = `Growth Accelerator: Meta + Google + Email + Chatbot por <span class="precio-destacado">US$${discountedPrice}/mes</span> <span class="precio-strike">$${regularPrice}</span>`;
        }
        
        // Actualizar información de ahorro si existe
        const bundleInfo = document.querySelector('.bundle-offer-price');
        if (bundleInfo) {
            bundleInfo.textContent = `Incluye: 1 consulta estratégica gratis al mes + Set up inicial bonificado. ¡Ahorrá $${savings}/mes!`;
        }
    }
    
    /**
     * Configura mejoras para móvil
     */
    function setupMobileEnhancements() {
        if (window.innerWidth <= 768) {
            // En móvil, hacer los CTAs más accesibles
            const mainCTA = document.querySelector('.hero-buttons .btn');
            if (mainCTA) {
                mainCTA.style.width = '100%';
                mainCTA.style.padding = '16px 24px';
                mainCTA.style.fontSize = '1.1rem';
            }
            
            // Simplificar animaciones para mejor rendimiento
            document.body.classList.add('mobile-optimized');
        } else {
            // En desktop, eliminar optimizaciones móviles
            document.body.classList.remove('mobile-optimized');
        }
    }
    
    // =========================================================================
    // INICIALIZACIÓN PRINCIPAL
    // =========================================================================
    
    // Inicializar componentes principales de la página
    initScrollAnimations();
    initMetricAnimations();
    initServiceTabs();
    initTierTabs();
    initTierSelectorMini();
    initTooltips();
    updateSpecialOffer();
    setupMobileEnhancements();
    
    // Configuraciones al cargar completamente la página
    window.addEventListener('load', function() {
        // Eliminar cualquier clase de precarga
        document.body.classList.remove('preload');
        
        // Iniciar animación de scroll
        const scrollIndicator = document.querySelector('.scroll-indicator');
        if (scrollIndicator) {
            scrollIndicator.style.opacity = '1';
        }
        
        // Último respaldo para asegurar visibilidad
        asegurarVisibilidadCritica();
        
        // Manejar navegación por hash
        if (window.location.hash) {
            const targetElement = document.querySelector(window.location.hash);
            if (targetElement) {
                setTimeout(() => {
                    const headerHeight = document.getElementById('header')?.offsetHeight || 0;
                    const offset = headerHeight + 16;
                    const targetPosition = targetElement.offsetTop - offset;
                    
                    window.scrollTo({
                        top: targetPosition,
                        behavior: 'smooth'
                    });
                }, 500);
            }
        }
    });
    
    // Configurar event listener para resize
    window.addEventListener('resize', function() {
        setupMobileEnhancements();
    });

    // JavaScript para las pestañas de servicios
    document.addEventListener('DOMContentLoaded', function() {
        const tabButtons = document.querySelectorAll('.tab-btn');
        const tabPanes = document.querySelectorAll('.tab-pane');
        
        tabButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Remover clase active de todos los botones
                tabButtons.forEach(btn => btn.classList.remove('active'));
                // Agregar clase active al botón clickeado
                button.classList.add('active');
                
                // Obtener el id del tab a mostrar
                const tabId = button.getAttribute('data-tab');
                
                // Ocultar todos los tabs
                tabPanes.forEach(pane => pane.classList.remove('active'));
                
                // Mostrar el tab seleccionado
                document.getElementById(tabId).classList.add('active');
            });
        });
    });
    
    // =========================================================================
    // EXPORTAR FUNCIONES GLOBALES
    // =========================================================================
    
    // Exponer funciones públicas para acceso desde otros scripts
    window.OrangeVaporHome = {
        asegurarVisibilidadCritica,
        initServiceTabs,
        initTierTabs,
        initTooltips,
        updateSpecialOffer
    };
});
